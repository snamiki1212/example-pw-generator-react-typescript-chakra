{"version":3,"sources":["hooks/usePw.tsx","hooks/useToggle.tsx","components/PasswordGenerator.tsx","hooks/useCopyToast.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["generateAllAlphabets","isUpper","CHAR_CODE_OF_A","Array","from","length","_v","idx","String","fromCharCode","SYMBOL_RANGE_LIST","LIST_OF_LOWER_CHAR","LIST_OF_UPPER_CHAR","LIST_OF_NUMBER","LIST_OF_SYMBOL","reduce","prev","to","range","map","decimal","generatePw","shouldIncludeUpper","shouldIncludeNumber","shouldIncludeSymbol","list","push","Math","floor","random","getRandom","join","initialPw","useToggle","React","useReducer","PasswordGenerator","useState","setLength","toggleShouldIncludeUpper","toggleShouldIncludeNumber","toggleShouldIncludeSymbol","option","pw","setPw","useCallback","newPw","usePw","generate","handleClickPw","toast","useToast","navigator","clipboard","writeText","then","title","status","duration","catch","err","console","error","useCopyToast","height","bg","boxShadow","minWidth","maxWidth","borderRadius","p","fontSize","color","fontWeight","align","spacing","overflowX","borderWidth","borderColor","_hover","cursor","onClick","wordBreak","colorScheme","w","value","onChange","max","min","boxSize","justifyContent","isChecked","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.240ed382.chunk.js","sourcesContent":["import React from \"react\";\n\n// REF: https://en.wikipedia.org/wiki/List_of_Unicode_characters\nconst CHAR_CODE_OF_UPPER_A = 65;\nconst CHAR_CODE_OF_LOWER_A = 97;\nconst LENGTH_OF_ALPHABET = 26;\nconst generateAllAlphabets = ({ isUpper = false }) => {\n  const CHAR_CODE_OF_A = isUpper ? CHAR_CODE_OF_UPPER_A : CHAR_CODE_OF_LOWER_A;\n  return Array.from({ length: LENGTH_OF_ALPHABET }, (_v, idx) =>\n    String.fromCharCode(CHAR_CODE_OF_A + idx)\n  );\n};\n\nconst range = (from: number, to: number) =>\n  Array.from({ length: to - from + 1 }, (_v, idx) => from + idx);\n\nconst SYMBOL_RANGE_LIST = [\n  // REF: https://en.wikipedia.org/wiki/List_of_Unicode_characters\n  [33, 47],\n  [58, 64],\n  [91, 96],\n  [123, 126],\n];\nfunction generateSymbols() {\n  return SYMBOL_RANGE_LIST.reduce(\n    (prev, [from, to]) => [...prev, ...range(from, to)],\n    []\n  ).map((decimal) => String.fromCharCode(decimal));\n}\nconst generateNumStrings = () =>\n  Array.from({ length: 10 }, (_v, idx) => String(idx));\n\nconst LIST_OF_LOWER_CHAR = generateAllAlphabets({ isUpper: false });\nconst LIST_OF_UPPER_CHAR = generateAllAlphabets({ isUpper: true });\nconst LIST_OF_NUMBER = generateNumStrings();\nconst LIST_OF_SYMBOL = generateSymbols();\n\nconst getRandom = (list: unknown[]) => {\n  return list[Math.floor(Math.random() * list.length)];\n};\n\nconst generatePw = ({\n  length = 32,\n  shouldIncludeUpper,\n  shouldIncludeNumber,\n  shouldIncludeSymbol,\n}: Option) => {\n  const list = [...LIST_OF_LOWER_CHAR];\n  if (shouldIncludeUpper) list.push(...LIST_OF_UPPER_CHAR);\n  if (shouldIncludeNumber) list.push(...LIST_OF_NUMBER);\n  if (shouldIncludeSymbol) list.push(...LIST_OF_SYMBOL);\n  const pw = Array.from({ length }, () => getRandom(list)).join(\"\");\n  return pw;\n};\n\nconst initialPw = generatePw({\n  length: 32,\n  shouldIncludeNumber: true,\n  shouldIncludeSymbol: true,\n  shouldIncludeUpper: true,\n});\n\ntype Option = {\n  length: number;\n  shouldIncludeNumber: boolean;\n  shouldIncludeSymbol: boolean;\n  shouldIncludeUpper: boolean;\n};\n\nexport const usePw = (option: Option) => {\n  const [pw, setPw] = React.useState<string>(initialPw);\n  const generate = React.useCallback(() => {\n    const newPw = generatePw(option);\n    setPw(newPw);\n  }, [option]);\n\n  return [pw, generate] as const;\n};\n","import React from \"react\";\nexport const useToggle = () => React.useReducer((prev) => !prev, true);\n","import React from \"react\";\nimport {\n  Button,\n  Switch,\n  Slider,\n  SliderTrack,\n  SliderFilledTrack,\n  SliderThumb,\n  Box,\n  HStack,\n  Stack,\n  Text,\n  Center,\n} from \"@chakra-ui/react\";\nimport { usePw } from \"../hooks/usePw\";\nimport { useToggle } from \"../hooks/useToggle\";\nimport { useCopyToast } from \"../hooks/useCopyToast\";\n\nexport function PasswordGenerator() {\n  const [length, setLength] = React.useState<number>(32);\n  const [shouldIncludeUpper, toggleShouldIncludeUpper] = useToggle();\n  const [shouldIncludeNumber, toggleShouldIncludeNumber] = useToggle();\n  const [shouldIncludeSymbol, toggleShouldIncludeSymbol] = useToggle();\n\n  const option = {\n    length,\n    shouldIncludeNumber,\n    shouldIncludeSymbol,\n    shouldIncludeUpper,\n  };\n  const [pw, generate] = usePw(option);\n  const handleClickPw = useCopyToast(pw);\n\n  return (\n    <Center height=\"100vh\" bg=\"purple.900\">\n      <Stack\n        boxShadow=\"0 10px 25px black\"\n        minWidth=\"400\"\n        maxWidth=\"400\"\n        bg=\"purple.50\"\n        borderRadius=\"10\"\n        p=\"5\"\n      >\n        <Text fontSize=\"3xl\" color=\"purple.700\" fontWeight=\"900\" align=\"center\">\n          Password Genererator\n        </Text>\n        <Stack spacing=\"8\">\n          <Box\n            align=\"center\"\n            height=\"200\"\n            overflowX=\"scroll\"\n            borderWidth=\"1px\"\n            borderColor=\"purple.100\"\n            borderRadius=\"10\"\n            p=\"5\"\n            _hover={{\n              cursor: \"pointer\",\n            }}\n            onClick={handleClickPw}\n          >\n            <Text color=\"purple.400\" wordBreak=\"break-all\">\n              {pw}\n            </Text>\n          </Box>\n          <Box align=\"center\">\n            <Button onClick={generate} colorScheme=\"purple\" w=\"100%\">\n              Generate\n            </Button>\n          </Box>\n          <Stack spacing=\"1\">\n            <Text color=\"purple.700\">Length</Text>\n            <Slider value={length} onChange={setLength} max={1000} min={1}>\n              <SliderTrack bg=\"purple.100\">\n                <SliderFilledTrack bg=\"purple\" />\n              </SliderTrack>\n              <SliderThumb boxSize={10}>\n                <Box color=\"purple\">{length}</Box>\n              </SliderThumb>\n            </Slider>\n          </Stack>\n          <HStack justifyContent=\"space-between\">\n            <Text color=\"purple.700\">Include Uppercase?</Text>\n            <Switch\n              onChange={toggleShouldIncludeUpper}\n              isChecked={shouldIncludeUpper}\n              colorScheme=\"purple\"\n            />\n          </HStack>\n          <HStack justifyContent=\"space-between\">\n            <Text color=\"purple.700\">Include number?</Text>\n            <Switch\n              onChange={toggleShouldIncludeNumber}\n              isChecked={shouldIncludeNumber}\n              colorScheme=\"purple\"\n            />\n          </HStack>\n          <HStack justifyContent=\"space-between\">\n            <Text color=\"purple.700\">Include symbol?</Text>\n            <Switch\n              onChange={toggleShouldIncludeSymbol}\n              isChecked={shouldIncludeSymbol}\n              colorScheme=\"purple\"\n            />\n          </HStack>\n        </Stack>\n      </Stack>\n    </Center>\n  );\n}\n","import React from \"react\";\nimport { useToast } from \"@chakra-ui/react\";\n\nexport const useCopyToast = (pw: string) => {\n  const toast = useToast();\n  const handle = React.useCallback(() => {\n    navigator.clipboard\n      .writeText(pw)\n      .then(() => {\n        toast({\n          title: \"Copied\",\n          status: \"info\",\n          duration: 1_500,\n        });\n      })\n      .catch((err) => {\n        console.error(err);\n        toast({\n          title: \"Can't copy\",\n          status: \"error\",\n          duration: 1_500,\n        });\n      });\n  }, [toast, pw]);\n  return handle;\n};\n","import React from \"react\";\nimport { ChakraProvider } from \"@chakra-ui/react\";\nimport { PasswordGenerator } from \"./components/PasswordGenerator\";\n\nfunction App() {\n  return (\n    <ChakraProvider>\n      <PasswordGenerator />\n    </ChakraProvider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}